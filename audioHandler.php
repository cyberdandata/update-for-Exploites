<?php
header('Content-Type: application/json');

$dataFile = 'audios.json'; // File to store audio data
$uploadsDir = 'uploads3/';  // Updated uploads directory for audio files and covers

// Create the uploads3 directory if it doesn't exist
if (!file_exists($uploadsDir)) {
    mkdir($uploadsDir, 0777, true);
}

// Handle the action
$action = $_GET['action'] ?? '';

if ($action === 'upload') {
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $title = $_POST['title'];
        $cover = $_FILES['cover'];
        $audio = $_FILES['audio'];

        // Save cover image
        $coverPath = $uploadsDir . uniqid() . '_' . basename($cover['name']);
        move_uploaded_file($cover['tmp_name'], $coverPath);

        // Save audio file
        $audioPath = $uploadsDir . uniqid() . '_' . basename($audio['name']);
        move_uploaded_file($audio['tmp_name'], $audioPath);

        // Save audio metadata to JSON
        $data = file_exists($dataFile) ? json_decode(file_get_contents($dataFile), true) : [];
        $data[] = [
            'id' => uniqid(),
            'title' => $title,
            'cover' => $coverPath,
            'audio' => $audioPath
        ];
        file_put_contents($dataFile, json_encode($data));

        echo json_encode(['success' => true]);
    } else {
        echo json_encode(['success' => false, 'message' => 'Invalid request']);
    }
} elseif ($action === 'load') {
    // Load all audios
    $data = file_exists($dataFile) ? json_decode(file_get_contents($dataFile), true) : [];
    echo json_encode($data);
} elseif ($action === 'delete') {
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $id = $_POST['id'];

        // Load existing data
        $data = file_exists($dataFile) ? json_decode(file_get_contents($dataFile), true) : [];

        // Find and delete the audio
        $filteredData = array_filter($data, function($audio) use ($id) {
            if ($audio['id'] === $id) {
                if (file_exists($audio['cover'])) unlink($audio['cover']);
                if (file_exists($audio['audio'])) unlink($audio['audio']);
                return false; // Exclude from the list
            }
            return true;
        });

        // Save updated data
        file_put_contents($dataFile, json_encode(array_values($filteredData)));
        echo json_encode(['success' => true]);
    } else {
        echo json_encode(['success' => false, 'message' => 'Invalid request']);
    }
} else {
    echo json_encode(['success' => false, 'message' => 'No valid action provided']);
}
?>
